plot <- ggplot(stack(subset(imputedDfTr, select = -TARGET)), aes(x = ind, y = values)) +
geom_violin() +
facet_wrap(~ind, scales = "free", ncol = 3) +
theme_minimal() +
theme(axis.text.x = element_blank()) +
ylab(label = "") +
xlab(label = "") +
stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
plot
winsorize <- function(x, multiple=2.2)
{
q <- quantile(x)
iqr <- IQR(x)
iqrAdjusted <- iqr*multiple
rangeLow <- q['25%']-iqrAdjusted
rangeHigh <- q['75%']+iqrAdjusted
x[x<rangeLow] <- min(x[x>rangeLow])
x[x>rangeHigh] <- max(x[x<rangeHigh])
return(x)
}
wDfTr <- cbind(sapply(c('FreeSulfurDioxide', 'TotalSulfurDioxide', 'ResidualSugar'), function(x) winsorize(dfTr[,x], multiple=2.2)), subset(imputedDfTr, select = -c(FreeSulfurDioxide, TotalSulfurDioxide, ResidualSugar)))
winsorize <- function(x, multiple=2.2)
{
q <- quantile(x)
iqr <- IQR(x)
iqrAdjusted <- iqr*multiple
rangeLow <- q['25%']-iqrAdjusted
rangeHigh <- q['75%']+iqrAdjusted
x[x<rangeLow] <- min(x[x>rangeLow])
x[x>rangeHigh] <- max(x[x<rangeHigh])
return(x)
}
wDfTr <- cbind(sapply(c('FreeSulfurDioxide', 'TotalSulfurDioxide', 'ResidualSugar'), function(x) winsorize(imputedDfTr[,x], multiple=2.2)), subset(imputedDfTr, select = -c(FreeSulfurDioxide, TotalSulfurDioxide, ResidualSugar)))
fwDfTr <- rbind(wDfTr, imputedDfTr$TARGET)
stargazer(fwDfTr, header = FALSE)
View(fwDfTr)
View(wDfTr)
View(dfTr)
12796 - 4898
unique(dfTr)
options(xtable.comment = FALSE)
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse, stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc, foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car, pracma, boot, pander, ggplot2)
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%205/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW5 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW5 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW5 - Group 1", full.names = TRUE))
pandoc.table(daDict %>%
mutate(`Variable Code` = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(`Variable Code`, Definition),
justify = c("center","left"), emphasize.strong.rows = seq(from = 1, to = nrow(daDict), by = 2),
table.alignment.rownames = 'centre',style="multiline")
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame()
options(xtable.comment = FALSE)
reporttools::tableContinuous(dfTr , longtable = TRUE, cap = "Wine Training Data Set Summary Statistics")
summary(dfTr)
dfTr$LabelAppeal
View(daDict)
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
mutate(LabelAppeal = as.factor(LabelAppeal),
STARS = as.factor(STARS)) %>%
as.data.frame()
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric)
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
mutate(LabelAppeal = as.factor(LabelAppeal),
STARS = as.factor(STARS))
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = as.factor(LabelAppeal),
STARS = as.factor(STARS))
summary(TARGET)
summary(dfTr$TARGET
)
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = as.factor(LabelAppeal),
STARS = as.factor(STARS),
TARGET = as.integer(TARGET))
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = factor(LabelAppeal, levels = c(-2, -1, 0, 1, 2)),
STARS = factor(STARS, levels = c(1,2,3,4)),
TARGET = as.integer(TARGET))
options(xtable.comment = FALSE)
reporttools::tableNominal(dfTr %>%
dplyr::select(TARGET, LabelAppeal, STARS),
cap = "Table of nominal variables", lab = "tab: nominal", print.pval = "fisher",
caption.placement = "top", longtable = TRUE,
add.to.row = list(pos = list(0), command = "\\hline \\endhead "))
options(xtable.comment = FALSE)
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse, stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc, foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car, pracma, boot, pander, ggplot2)
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%205/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW5 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW5 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW5 - Group 1", full.names = TRUE))
pandoc.table(daDict %>%
mutate(`Variable Code` = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(`Variable Code`, Definition),
justify = c("center","left"), emphasize.strong.rows = seq(from = 1, to = nrow(daDict), by = 2),
table.alignment.rownames = 'centre',style="multiline")
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = factor(LabelAppeal, levels = c(-2, -1, 0, 1, 2)),
STARS = factor(STARS, levels = c(1,2,3,4)),
TARGET = as.integer(TARGET))
options(xtable.comment = FALSE)
reporttools::tableNominal(dfTr %>% dplyr::select(TARGET, LabelAppeal, STARS),
cap = "Table of nominal variables", lab = "tab: nominal", print.pval = "fisher",
caption.placement = "top", longtable = TRUE,
add.to.row = list(pos = list(0), command = "\\hline \\endhead "))
options(xtable.comment = FALSE)
reporttools::tableContinuous(dfTr %>% dplyr::select(-TARGET, -LabelAppeal, -STARS) , longtable = TRUE, cap = "Wine Training Data Set Summary Statistics")
registerDoParallel(cl = makeCluster(10), cores = 2)
set.seed(1234)
imputed_data <- dfTr %>% missForest(maxiter = 10, ntree = 100, replace = TRUE, parallelize = 'forests', verbose = TRUE) #Takes approximately 20 minutes to process, resource intensive
getwd()
write.csv(imputed_data$ximp,"imputed_wine-training-data.csv", row.names = FALSE) #wrote imputed_data to csv file due to processing time taken by missForest and random results.
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv")
summary(imputedDfTr)
imputedDfTr$STARS
imputedDfTr$LabelAppeal
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv") %>%
mutate(STARS = round(STARS, 0))
imputedDfTr$STARS
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv") %>%
mutate(STARS = factor(round(STARS, 0), c(1,2,3,4))
)
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv") %>%
mutate(STARS = factor(round(STARS, 0), levels = c(1,2,3,4)))
View(imputedDfTr)
plot <- ggplot(stack(subset(imputedDfTr, select = -TARGET)), aes(x = ind, y = values)) +
geom_boxplot() +
facet_wrap(~ind, scales = "free", ncol = 3) +
theme_minimal() +
theme(axis.text.x = element_blank()) +
ylab(label = "") +
xlab(label = "") +
stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
plot
stack(subset(imputedDfTr, select = -TARGET))
imputedDfTr %>%
select(-TARGET) %>% stack()
imputedDfTr %>%
dplyr::select(-TARGET) %>% stack()
reshape2::melt(imputedDfTr %>%
dplyr::select(-TARGET))
x <- reshape2::melt(imputedDfTr %>% dplyr::select(-TARGET))
lot <- ggplot(imputedDfTr %>% dplyr::select(-TARGET) %>% mutate(STARS = as.numeric(STARS)) %>% stack(),
aes(x = ind, y = values)) +
geom_boxplot() +
facet_wrap(~ind, scales = "free", ncol = 3) +
theme_minimal() +
theme(axis.text.x = element_blank()) +
ylab(label = "") +
xlab(label = "") +
stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
plot
imputedDfTr %>% dplyr::select(-TARGET) %>% mutate(STARS = as.numeric(STARS)) %>% stack()
plot
plotDf <- imputedDfTr %>% dplyr::select(-TARGET) %>% mutate(STARS = as.numeric(STARS)) %>% stack()
View(plotDf)
plotDf <- imputedDfTr %>%
dplyr::select(-TARGET) %>%
mutate(STARS = as.numeric(STARS)) %>%
stack()
plot <- ggplot(plotDf, aes(x = ind, y = values)) +
geom_boxplot() +
facet_wrap(~ind, scales = "free", ncol = 3) +
theme_minimal() +
theme(axis.text.x = element_blank()) +
ylab(label = "") +
xlab(label = "") +
stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
plot
wDfTr <- cbind(sapply(c('FreeSulfurDioxide', 'TotalSulfurDioxide', 'ResidualSugar'),
function(x) winsorize(imputedDfTr[,x], multiple=2.2)),
subset(imputedDfTr, select = -c(FreeSulfurDioxide, TotalSulfurDioxide, ResidualSugar)))
winsorize <- function(x, multiple=2.2)
{
q <- quantile(x)
iqr <- IQR(x)
iqrAdjusted <- iqr*multiple
rangeLow <- q['25%']-iqrAdjusted
rangeHigh <- q['75%']+iqrAdjusted
x[x<rangeLow] <- min(x[x>rangeLow])
x[x>rangeHigh] <- max(x[x<rangeHigh])
return(x)
}
wDfTr <- cbind(sapply(c('FreeSulfurDioxide', 'TotalSulfurDioxide', 'ResidualSugar'),
function(x) winsorize(imputedDfTr[,x], multiple=2.2)),
subset(imputedDfTr, select = -c(FreeSulfurDioxide, TotalSulfurDioxide, ResidualSugar)))
fwDfTr <- rbind(wDfTr, imputedDfTr$TARGET)
stargazer(fwDfTr, header = FALSE)
wDfTr
rbind(wDfTr, imputedDfTr$TARGET)
fwDfTr <- cbind(wDfTr, imputedDfTr$TARGET)
wDfTr <- cbind(sapply(c('FreeSulfurDioxide', 'TotalSulfurDioxide', 'ResidualSugar'),
function(x) winsorize(imputedDfTr[,x], multiple=2.2)),
subset(imputedDfTr, select = -c(FreeSulfurDioxide, TotalSulfurDioxide, ResidualSugar)))
#fwDfTr <- rbind(wDfTr, imputedDfTr$TARGET)
stargazer(wDfTr, header = FALSE)
stargazer(wDfTr %>% mutate(STARS = as.numeric(STARS)), header = FALSE)
options(xtable.comment = FALSE)
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse, stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc, foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car, pracma, boot, pander, ggplot2)
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%205/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW5 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW5 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW5 - Group 1", full.names = TRUE))
pandoc.table(daDict %>%
mutate(`Variable Code` = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(`Variable Code`, Definition),
justify = c("center","left"), emphasize.strong.rows = seq(from = 1, to = nrow(daDict), by = 2),
table.alignment.rownames = 'centre',style="multiline")
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = factor(LabelAppeal, levels = c(-2, -1, 0, 1, 2)),
STARS = factor(STARS, levels = c(1,2,3,4)),
TARGET = as.integer(TARGET))
options(xtable.comment = FALSE)
reporttools::tableNominal(dfTr %>% dplyr::select(TARGET, LabelAppeal, STARS),
cap = "Wine Training Data Table of Discrete Variables",
lab = "tab: nominal",
print.pval = "fisher",
caption.placement = "top", longtable = TRUE,
add.to.row = list(pos = list(0), command = "\\hline \\endhead "))
View(dfTr)
options(xtable.comment = FALSE)
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse, stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc, foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car, pracma, boot, pander, ggplot2, PerformanceAnalytics)
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%205/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW5 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW5 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW5 - Group 1", full.names = TRUE))
pandoc.table(daDict %>%
mutate(`Variable Code` = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(`Variable Code`, Definition),
justify = c("center","left"), emphasize.strong.rows = seq(from = 1, to = nrow(daDict), by = 2),
table.alignment.rownames = 'centre',style="multiline")
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = factor(LabelAppeal, levels = c(-2, -1, 0, 1, 2)),
STARS = factor(STARS, levels = c(1,2,3,4)),
TARGET = as.integer(TARGET))
options(xtable.comment = FALSE)
reporttools::tableNominal(dfTr %>% dplyr::select(TARGET, LabelAppeal, STARS),
cap = "Wine Training Data Table of Discrete Variables",
lab = "tab: nominal",
print.pval = "fisher",
caption.placement = "top", longtable = TRUE,
add.to.row = list(pos = list(0), command = "\\hline \\endhead "))
options(xtable.comment = FALSE)
reporttools::tableContinuous(dfTr %>% dplyr::select(-TARGET, -LabelAppeal, -STARS) ,
longtable = TRUE,
cap = "Wine Training Data Table of Continuous Variables",
caption.placement = "top")
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv") %>% mutate(STARS = factor(round(STARS, 0), levels = c(1,2,3,4)))
digits = 1
descriptive <- describe(imputedDfTr %>% dplyr::select(-TARGET),
descript = "Table 4 : Imputed Descriptive Statistics",
digits = digits)
latex(descriptive, file = '')
chart.Correlation(imputedDfTr, histogram = TRUE, method = c("pearson"))
imputedDfTr <- as.matrix(imputedDfTr)
chart.Correlation(imputedDfTr, histogram = TRUE)
options(xtable.comment = FALSE)
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse, stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc, foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car, pracma, boot, pander, ggplot2, PerformanceAnalytics)
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%205/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW5 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW5 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW5 - Group 1", full.names = TRUE))
pandoc.table(daDict %>%
mutate(`Variable Code` = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(`Variable Code`, Definition),
justify = c("center","left"), emphasize.strong.rows = seq(from = 1, to = nrow(daDict), by = 2),
table.alignment.rownames = 'centre',style="multiline")
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = factor(LabelAppeal, levels = c(-2, -1, 0, 1, 2)),
STARS = factor(STARS, levels = c(1,2,3,4)),
TARGET = as.integer(TARGET))
options(xtable.comment = FALSE)
reporttools::tableNominal(dfTr %>% dplyr::select(TARGET, LabelAppeal, STARS),
cap = "Wine Training Data Table of Discrete Variables",
lab = "tab: nominal",
print.pval = "fisher",
caption.placement = "top", longtable = TRUE,
add.to.row = list(pos = list(0), command = "\\hline \\endhead "))
options(xtable.comment = FALSE)
reporttools::tableContinuous(dfTr %>% dplyr::select(-TARGET, -LabelAppeal, -STARS) ,
longtable = TRUE,
cap = "Wine Training Data Table of Continuous Variables",
caption.placement = "top")
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv") %>% mutate(STARS = factor(round(STARS, 0), levels = c(1,2,3,4)))
digits = 1
descriptive <- describe(imputedDfTr %>% dplyr::select(-TARGET),
descript = "Table 4 : Imputed Descriptive Statistics",
digits = digits)
latex(descriptive, file = '')
mImputedDfTr <- as.matrix(imputedDfTr)
View(mImputedDfTr)
chart.Correlation(imputedDfTr, histogram = TRUE, pch="+")
mImputedDfTr <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.matrix()
chart.Correlation(imputedDfTr, histogram = TRUE, pch="+")
PerformanceAnalytics::chart.Correlation(imputedDfTr, histogram = TRUE, pch="+")
?pairs.default
?pairs
View(mImputedDfTr)
mImputedDfTr <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric)
View(imputedDfTr)
mImputedDfTr <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
View(mImputedDfTr)
PerformanceAnalytics::chart.Correlation(imputedDfTr, histogram = TRUE, pch="+")
imputedDfTrMx <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("pearson"))
corrplot(corMx, order = "hclust", addrect = 10, method = "square", tl.col = "black", tl.cex = .50, na.label = " ")
imputedDfTrMx <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
View(imputedDfTrMx)
summary(imputedDfTrMx)
imputedDfTrMx <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("pearson"))
corrplot(corMx, order = "hclust", addrect = 10, method = "square", tl.col = "black", tl.cex = .50, na.label = " ")
?cor
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("kendall"))
options(xtable.comment = FALSE)
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse, stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc, foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car, pracma, boot, pander, ggplot2, PerformanceAnalytics)
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%205/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW5 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW5 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW5 - Group 1", full.names = TRUE))
pandoc.table(daDict %>%
mutate(`Variable Code` = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(`Variable Code`, Definition),
justify = c("center","left"), emphasize.strong.rows = seq(from = 1, to = nrow(daDict), by = 2),
table.alignment.rownames = 'centre',style="multiline")
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = factor(LabelAppeal, levels = c(-2, -1, 0, 1, 2)),
STARS = factor(STARS, levels = c(1,2,3,4)),
TARGET = as.integer(TARGET))
options(xtable.comment = FALSE)
reporttools::tableNominal(dfTr %>% dplyr::select(TARGET, LabelAppeal, STARS),
cap = "Wine Training Data Table of Discrete Variables",
lab = "tab: nominal",
print.pval = "fisher",
caption.placement = "top", longtable = TRUE,
add.to.row = list(pos = list(0), command = "\\hline \\endhead "))
options(xtable.comment = FALSE)
reporttools::tableContinuous(dfTr %>% dplyr::select(-TARGET, -LabelAppeal, -STARS) ,
longtable = TRUE,
cap = "Wine Training Data Table of Continuous Variables",
caption.placement = "top")
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv") %>% mutate(STARS = factor(round(STARS, 0), levels = c(1,2,3,4)))
digits = 1
descriptive <- describe(imputedDfTr %>% dplyr::select(-TARGET),
descript = "Table 4 : Imputed Descriptive Statistics",
digits = digits)
latex(descriptive, file = '')
imputedDfTrMx <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "square", tl.col = "black", tl.cex = .50, na.label = " ")
?corrplot
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", tl.cex = .50, na.label = " ")
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", tl.cex = .50, na.label = " ", bg = "grey")
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", tl.cex = .50, na.label = " ", bg = "grey1")
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", tl.cex = .50, na.label = " ", bg = "gray87")
imputedDfTrMx <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", tl.cex = .50, na.label = " ", bg = "gray80")
imputedDfTrMx <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", na.label = " ", bg = "gray80")
options(xtable.comment = FALSE)
library(pacman)
p_load(Hmisc, xlsx, xtable, knitr, scales, magrittr, tidyverse, stringr, e1071, corrplot, knitcitations, bibtex, missForest, abc, foreach, doParallel, stargazer, forecast, matrixStats, glmulti, leaps, data.table, highlight, car, pracma, boot, pander, ggplot2,magrittr)
download.file("https://github.com/ChristopheHunt/DATA-621-Group-1/raw/master/Homework%205/Data%20Dictionary.xlsx?raw=true", destfile = "Data Dictionary HW5 - Group 1.xlsx", mode = 'wb')
daDict <- read.xlsx("Data Dictionary HW5 - Group 1.xlsx", sheetIndex = 1)
file.remove(dir(getwd(), pattern = "Data Dictionary HW5 - Group 1", full.names = TRUE))
pandoc.table(daDict %>%
mutate(`Variable Code` = VARIABLE.NAME, Definition = DEFINITION)  %>%
dplyr::select(`Variable Code`, Definition),
justify = c("center","left"), emphasize.strong.rows = seq(from = 1, to = nrow(daDict), by = 2),
table.alignment.rownames = 'centre',style="multiline")
dfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/wine-training-data.csv") %>%
dplyr::select(-dplyr::contains("INDEX")) %>%
map_if(is.integer, as.numeric) %>%
as.data.frame() %>%
mutate(LabelAppeal = factor(LabelAppeal, levels = c(-2, -1, 0, 1, 2)),
STARS = factor(STARS, levels = c(1,2,3,4)),
TARGET = as.integer(TARGET))
options(xtable.comment = FALSE)
reporttools::tableNominal(dfTr %>% dplyr::select(TARGET, LabelAppeal, STARS),
cap = "Wine Training Data Table of Discrete Variables",
lab = "tab: nominal",
print.pval = "fisher",
caption.placement = "top", longtable = TRUE,
add.to.row = list(pos = list(0), command = "\\hline \\endhead "))
options(xtable.comment = FALSE)
reporttools::tableContinuous(dfTr %>% dplyr::select(-TARGET, -LabelAppeal, -STARS) ,
longtable = TRUE,
cap = "Wine Training Data Table of Continuous Variables",
caption.placement = "top")
imputedDfTr <- read.csv("https://raw.githubusercontent.com/ChristopheHunt/DATA-621-Group-1/master/Homework%205/imputed_wine-training-data.csv") %>% mutate(STARS = factor(round(STARS, 0), levels = c(1,2,3,4)))
digits = 1
descriptive <- describe(imputedDfTr %>% dplyr::select(-TARGET),
descript = "Table 4 : Imputed Descriptive Statistics",
digits = digits)
latex(descriptive, file = '')
imputedDfTrMx <- imputedDfTr %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric) %>%
as.data.frame() %>%
as.matrix()
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", na.label = " ", bg = "gray80")
plotDf <- imputedDfTr %>%
dplyr::select(-TARGET) %>%
mutate(STARS = as.numeric(STARS)) %>%
stack()
plot <- ggplot(plotDf, aes(x = ind, y = values)) +
geom_boxplot() +
facet_wrap(~ind, scales = "free", ncol = 3) +
theme_minimal() +
theme(axis.text.x = element_blank()) +
ylab(label = "") +
xlab(label = "") +
stat_summary(fun.y = mean, geom = "point", shape = 5, size = 4)
plot
winsorize <- function(x, multiple=2.2)
{
q <- quantile(x)
iqr <- IQR(x)
iqrAdjusted <- iqr*multiple
rangeLow <- q['25%']-iqrAdjusted
rangeHigh <- q['75%']+iqrAdjusted
x[x<rangeLow] <- min(x[x>rangeLow])
x[x>rangeHigh] <- max(x[x<rangeHigh])
return(x)
}
wDfTr <- cbind(sapply(c('FreeSulfurDioxide', 'TotalSulfurDioxide', 'ResidualSugar'),
function(x) winsorize(imputedDfTr[,x], multiple=2.2)),
subset(imputedDfTr, select = -c(FreeSulfurDioxide, TotalSulfurDioxide, ResidualSugar)))
#fwDfTr <- rbind(wDfTr, imputedDfTr$TARGET)
stargazer(wDfTr %>% mutate(STARS = as.numeric(STARS)), header = FALSE)
library(car)
fit <- lm(TARGET ~ FreeSulfurDioxide + TotalSulfurDioxide + ResidualSugar + FixedAcidity + VolatileAcidity + CitricAcid + Chlorides + Density + pH + Sulphates + Alcohol + LabelAppeal + STARS, data = fwDfTr)
imputedDfTrMx <- imputedDfTr                   %>%
map_if(is.integer, as.numeric) %>%
map_if(is.factor, as.numeric)  %>%
as.data.frame()                %>%
as.matrix()
corMx <- cor(imputedDfTrMx , use = "everything",  method = c("spearman"))
corrplot(corMx, order = "hclust", addrect = 10, method = "circle", tl.col = "black", na.label = " ", bg = "gray80")
